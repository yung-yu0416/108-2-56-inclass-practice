knitr::opts_chunk$set(echo = TRUE)
as.integer(majors10_factor)
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-1,5,2,3)
vNum5 <- c(c(-1,5),c(2,3))
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum4 <- c() # 空向量
typeof(num1Vector)
typeof(num2Vector)
knitr::opts_chunk$set(echo = TRUE)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message="update"
)
library(lubridate)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message="update"
)
print(commit)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
tainanSportsMap[1]
tainanSportsMap[1076]
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)], max.level=1)
str(listExample[c(2,1)], max.level=1)
knitr::opts_chunk$set(echo = TRUE)
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體體經濟學",
teacher="Mark",
grade=78
)
)
)
)
str(listExample)
listExample[[1]]
listExample[[2]]
get1 <- listExample[["學期"]] #拿出來
get2 <- listExample["學期"] #只留下
str(get1)
str(get2)
get1$`108-1` -> get1_layer1
get1_layer1
get1$`108-1` -> get1_layer1
get1_layer1[[1]] -> get1_layer2
get1
get1$`108-1` -> get1_layer1
get1_layer1[[1]] -> get1_layer2
get1_layer2$teacher
get1$`108-1` -> get1_layer1 ; get1_layer1
get1_layer1[[1]] -> get1_layer2 ; get1_layer2
get1_layer2$teacher
get1$`108-1` -> get1_layer1 ; get1_layer1
get1_layer1[[1]] -> get1_layer2 ; get1_layer2
get1_layer2$teacher
get1$`108-1` -> get1_layer1 ; get1_layer1
str(get1_layer1)
get1_layer1[[1]] -> get1_layer2 ; get1_layer2
str(get1_layer2)
get1$`108-1`[[1]]$teacher
get1_layer1[[1]] -> get1_layer2 ; #get1_layer2
str(get1_layer2)
get1$`108-1` -> get1_layer1 ; #get1_layer1
str(get1_layer1)
get2 <- listExample["學期"]
get2_layer1 <- get2[[1]]
get2_layer2 <- get2_layer1[["108-1"]]
get2_layer3 <- get2_layer2[[1]]
get2_layer3$teacher
today <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
weather <- list(today,tomorrow)
print(weather)
today <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
str(today)
today[[1]][[2]]
today <- list(
list("台北市",
highest_temp =c(highest_temp = 25),
lowest_temp =c(lowest_temp = 18)),
list("新北市",
highest_temp =c(highest_temp = 24),
lowest_temp =c(lowest_temp = 15)))
today <- list(
list("台北市",
highest_temp =c(highest_temp = 25),
lowest_temp =c(lowest_temp = 18)),
list("新北市",
highest_temp =c(highest_temp = 24),
lowest_temp =c(lowest_temp = 15)))
str(today)
today <- list(
list("台北市",
highest_temp =c(highest_temp = 25),
lowest_temp =c(lowest_temp = 18)),
list("新北市",
highest_temp =c(highest_temp = 24),
lowest_temp =c(lowest_temp = 15)))
str(today)
today[[1]]$highest_temp
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
)
)
str(list1)
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
)
)
str(list1)
a[[7]] <- "Johnson"
a
a[[7]] <- "Johnson"
a
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary")) #向量疊代
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary")) #向量疊代
a
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
str(list1)
list1[[1]]$birthday
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
)
)
str(list1)
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
str(list1)
list1[[2]]$status <- c(height=163, weight=45)
list1[[1]]$status[["height"]] <- 176
str(list1)
list1[[1]][["age"]] <- 21
list1[[2]]["age"] <- list(21)
# 改變「一個」時，使用[[ ]]比較不會錯。
str(list1)
list1[[1]][c("bloodType","registered")] <- list("AB",TRUE)
str(list1)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
str(listExample)
# 108-1新增一科目成績
listExample$學期$`108-1`[[2]] <-
list(name="產業經濟學")
str(listExample)
listExample$學期$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
# 108-1新增一科目成績
listExample$`學期`$`108-1`[[2]] <-
list(name="產業經濟學")
str(listExample)
listExample$`學期`$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
# 108-1新增一科目成績
listExample$`學期`$`108-1`[[2]] <-
list(name="產業經濟學")
str(listExample)
listExample$`學期`$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
print(a)
a[-c(1,3)]
a[c(-2)]
print(a)
a[-c(1,3)] -> a # 要回存才算真的刪除
print(a)
a[-c(1,3)]
a[c(-2)]
print(a)
a[-c(1,3)] -> a # 要回存才算真的刪除
print(a)
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
),
list(
name="Mary",
birthday=ymd("1998-08-24"),
status=c(height=163, weight=45),
age=21,
bloodType="AB"
)
)
str(list1)
list1[[1]][-c(3)] -> list1[[1]]
list1[[1]][-c(3)] -> list1[[1]]
str(list1)
list1[[2]][-c(3,5)] -> list[[2]]
list1[[2]][-c(3,5)] -> list[[2]]
list1[[2]][-c(3,5)] -> list[[2]]
list1[[2]][-c(3,5)] -> list1[[2]]
str(list1)
str(list1)
list1[[2]][c(1,2)] <- NULL
str(list1)
list1[[2]][c(1,2)] <- NULL #不用回存
str(list1)
list1[[2]][c(1,2)] <- NULL #不用回存
str(list1)
str(list1)
list1[[2]][c(1,2)] <- NULL #不用回存
str(list1)
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
str(list1)
list1[[2]][c(1,2)] <- NULL #不用回存
str(list1)
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
str(newTaipeiYouBike[[2]])
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
str(newTaipeiYouBike[[2]])
#1
newTaipeiYouBike[[2]][-c(2,5,6)] -> newTaipeiYouBike[[2]]
str(newTaipeiYouBike[[2]])
#2
newTaipeiYouBike[[2]][c(2,5,6)] <- NULL
str(newTaipeiYouBike[[2]])
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
#1
str(newTaipeiYouBike[[2]])
newTaipeiYouBike[[2]][-c(2,5,6)] -> newTaipeiYouBike[[2]]
str(newTaipeiYouBike[[2]])
#2
str(newTaipeiYouBike[[2]])
newTaipeiYouBike[[2]][c(2,5,6)] <- NULL
str(newTaipeiYouBike[[2]])
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
#1
str(newTaipeiYouBike[[2]])
newTaipeiYouBike[[2]][-c(2,5,6)] -> newTaipeiYouBike[[2]]
str(newTaipeiYouBike[[2]])
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
#2
newTaipeiYouBike[[2]][c(2,5,6)] <- NULL
str(newTaipeiYouBike[[2]])
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
str(newTaipeiYouBike[[2]])
newTaipeiYouBike[[2]][-c(2,5,6)] -> newTaipeiYouBike[[2]]
str(newTaipeiYouBike[[2]])
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
newTaipeiYouBike[[2]][c(2,5,6)] <- NULL
str(newTaipeiYouBike[[2]])
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
str(newTaipeiYouBike[[2]])
newTaipeiYouBike[[2]][c(2,5,6)] <- NULL
str(newTaipeiYouBike[[2]])
knitr::opts_chunk$set(echo = TRUE)
a <- c(2, 3, 5)
b <- c(4,-1, 3)
a <- c(2, 3, 5)
b <- c(4,-1, 3)
a+b
a-b
a*b
a/b
a %% b
# 相當於
c(2%%4, 3%%(-1), 5%%3)
a ** b
sequenceNums <- c(11, 6, 8, 11, 12, 11, 3, 7, 10, 8)
print(sequenceNums)
sequenceNums %% 2 # 餘數為1則是奇數，0則是偶數
# a+b 即等於
c(2+4, 3+(-1), 5+3)
# a**b 即等於
c(2**4, 3**(-1), 5**3)
5*c(1,3,4)+7
# 其實是
c(5)*c(1,3,4)+c(7)
## 對向量5，向量7進行recycle:
c(5,5,5)*c(1,3,4)+c(7,7,7)
## Recycle等長後才進行elementwise operation:
c(5*1+7, 5*3+7, 5*4+7)
# 狀況一: 堆疊一定倍數剛好一樣長
c(2,3)/c(-2,-13,10,22)
c(2,3,2,3)/c(-2,-13,10,22)
# 狀況二: 倍數堆疊一定會超過，只好截斷
c(2,3)/c(-2,-13,10)
c(2,3,2)/c(-2,-13,10)
# 狀況二: 倍數堆疊一定會超過，只好截斷
c(2,3)/c(-2,-13,10)
c(2,3,2)/c(-2,-13,10)
# 狀況二: 倍數堆疊一定會超過，只好截斷
c(2,3)/c(-2,-13,10)
c(2,3,2)/c(-2,-13,10)
# 狀況二: 倍數堆疊一定會超過，只好截斷
c(2,3)/c(-2,-13,10)
c(2,3,2)/c(-2,-13,10)
paste0(
c("我叫"), c("小明","小美")
)
paste0(
c("他叫","我叫"), c("小明","小美","大雄")
)
paste0(
c("我叫","我叫"), c("小明","小美")
)
example <- list(
name=c("小明","小花","小新","美美"),
height=c(175,166,170,160),
weight=c(77,NA,60,43),
birthday=lubridate::ymd(c("1998-03-11","1999-12-22","1995-08-22","2001-10-10")),
hobby=c("美食 旅遊","旅遊 時尚","3C 美食","音樂 旅遊"),
residence=c("Taipei","New Taipei","Taichung","Kaohsiung"),
allowance=factor(c("0-1000","1001-2000","2000+","1001-2000")),
bloodType=c("A","B","B","O")
)
View(example)
str(example[c("name","height")])
pick_above170 <- example$height >= 170
example$height
c(175, 166, 170, 160) >= 170
example$name[pick_above170]
example$name[c(T, F, T, F)]
