c("108-2","食在拉丁美洲")
)
print(`小明108學年課表A`)
# list含兩個lists
`小明108學年課表B` <- list(
list("108-1","高級會計學","高等統計學"),
list("108-2","食在拉丁美洲")
)
print(`小明108學年課表B`)
View(小明108學年課表A)
View(小明108學年課表B)
# list含兩個lists
`小明108學年課表B` <- list(
list("108-1","高級會計學","高等統計學"),
list("108-2","食在拉丁美洲")
)
print(`小明108學年課表B`)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表D` <- list(
`上學期`=list(
semester=c("108-1"), # 可只寫 "108-1"
courses=c("高級會計學","高等統計學")
),
`下學期`=list(
semester=c("108-2"),
courses=c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表D` <- list(
`上學期`=list(
semester=c("108-1"), # 可只寫 "108-1"
courses=c("高級會計學","高等統計學")
),
`下學期`=list(
semester=c("108-2"),
courses=c("食在拉丁美洲")
)
)
print(`小明108學年課表D`)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表D` <- list(
`上學期`=list(
c("108-1"), # 可只寫 "108-1"
courses=c("高級會計學","高等統計學")
),
list(
semester=c("108-2"),
courses=c("食在拉丁美洲")
)
)
print(`小明108學年課表D`)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表D` <- list(
`上學期`=list(
semester=c("108-1"), # 可只寫 "108-1"
courses=c("高級會計學","高等統計學")
),
`下學期`=list(
semester=c("108-2"),
courses=c("食在拉丁美洲")
)
)
print(`小明108學年課表D`)
commit<-list(
author=c("Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author=list("Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z"),
committer=,
message=
)
commit<-list(
author=c("Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author=list("Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z"),
# committer=,
#message=
)
commit<-list(
author=c("Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author=list("Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z"))
)
print(commit)
# committer=,
#message=
)
commit<-list(
author=c("Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author=list("Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z"))
)
print(commit)
# committer=,
#message=
commit<-list(
author1=c(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author2=list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z"))
)
print(commit)
# committer=,
#message=
commit<-list(
author1=c(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author2=list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")
),
message=c("update")
)
commit<-list(
author1=c(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author2=list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")
),
message=c("update")
)
commit<-list(
author1=c(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
"2020-03-25T07:17:40Z"),
author2=list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")
),
message=c("update")
)
print(commit)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")
),
message=c("update")
)
print(commit)
knitr::opts_chunk$set(echo = TRUE)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message=c("update")
)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z"),
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message=c("update")
)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message="update"
)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message="update"
)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message="update"
)
library(lubridate)
commit<-list(
#author1=c(
#"Martin老師",
#"mtlin@gm.ntpu.edu.tw",
#"2020-03-25T07:17:40Z"),
author=list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer=list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message="update"
)
print(commit)
browseURL("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits")
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(commit)
library(jsonlite)
fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
View(weather_next36hours)
save(commit,listExample,`小明108學年課表C`,file="today.Rda")
save(commit,listExample,`小明108學年課表C`,file="today.Rda")
save(commit,listExample,`小明108學年課表C`,file="today.Rda")
View(小明108學年課表C)
View(小明108學年課表C)
load("today.Rda")
load("today.Rda")
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample[[1]]
vectorExample[[3]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
tainanSportsMap[1]
tainanSportsMap[1076]
# 有多少名字可選：
names(listExample)
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
# 有多少名字可選：
names(listExample)
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
str(listExample)
str(listExample$學期)
str(listExample$`學期`)
listExample[["student"]]
listExample$student
listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
listExample[["student"]]
listExample[[student]]
listExample[["student"]]
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]], mmax.level = 1)
str(newTaipeiCityVaccine$result, mmax.level = 1)
str(newTaipeiCityVaccine[["sresult"]], mmax.level = 1)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]], mmax.level = 1)
str(newTaipeiCityVaccine$result, mmax.level = 1)
str(newTaipeiCityVaccine[["sresult"]], mmax.level = 1)
str(newTaipeiCityVaccine[[2]], mmax.level = 1)
str(newTaipeiCityVaccine$result, mmax.level = 1)
str(newTaipeiCityVaccine[["sresult"]], mmax.level = 1)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]], max.level = 1)
str(newTaipeiCityVaccine$result, max.level = 1)
str(newTaipeiCityVaccine[["sresult"]], max.level = 1)
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2), max.level=1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)], max.level=1)
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)], max.level=1)
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)], max.level=1)
str(listExample[c(2,1)], max.level=1)
str(tainanSportsMap, max.level = 1)
str(tainanSportsMap[c[1,382,1067], max.level=1)
str(tainanSportsMap, max.level = 1)
str(tainanSportsMap[c(1,382,1067)], max.level=1)
str(tainanSportsMap, max.level = 1)
str(tainanSportsMap[c(1,382,1067)], max.level = 1)
str(tainanSportsMap, max.level = 1)
str(tainanSportsMap[c(1,382,1067)], max.level = 1)
str(tainanSportsMap, max.level = 1)
str(tainanSportsMap[c(1,382,1076)], max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
listExample[c("學期","student")]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
knitr::opts_chunk$set(echo = TRUE)
str(listExample)
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
str(listExample)
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
str(listExample)
str(listExample[c(F,T)]) # 不要，要
listExample[c("學期")]
str(listExample[c(T,T)]) # 要，要
names(taipeiNightMarkets)
names(taipeiNightMarkets)
c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,F,T) -> selectmarkets
taipeiNightMarkets[selectmarkets]
str(taipeiNightMarkets[c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,F,T)], max.level=1 )
names(taipeiNightMarkets)
c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,F,T) -> selectmarkets
taipeiNightMarkets[selectmarkets]
str(taipeiNightMarkets[c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,F,T)], max.level=1 )
selectmarkets <- rep(F,14) #repeat
selectmarkets <- rep(F,14) #repeat
selectmarkets <- rep(F,14) #repeat
rep(F,14) #repeat
selectmarkets <- rep(F,14) #repeat
print(selectmarkets)
selectmarkets[c(1,5,10,14)]
selectmarkets <- rep(F,14) #repeat
print(selectmarkets)
selectmarkets[c(1,5,10,14)] <- TRUE #replacement
selectmarkets <- rep(F,14) #repeat
print(selectmarkets)
selectmarkets[c(1,5,10,14)] <- TRUE #replacement
print(selectmarkets)
selectmarkets <- rep(F,14) #repeat F by 14 times
print(selectmarkets)
selectmarkets[c(1,5,10,14)] <- TRUE #replacement
print(selectmarkets)
str(taipeiNightMarkets[selectmarkets], max.level = 1)
