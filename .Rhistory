system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
# 檢視步驟耗時elapse time
system.time(
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
)
if(!exists("weather_next36hours")){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
}
askSilly_weather2 <- function(locationInput,dateInput){
if(!exists("weather_next36hours")){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
}
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
SOAR::Remove(weather_next36hours)
system.time(
askSilly_weather2("新北市",today())
)
system.time(
askSilly_weather2("臺北市",today())
)
askSilly_weather2("新北市",today())
askSilly_weather2("臺北市",today())
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
library(clipr)
system.time(
askSilly_weather("新北市",today())
)
library(lubridate)
library(clipr)
system.time(
askSilly_weather("新北市",today())
)
if(condition){
body for TRUE condition
# n 為偶數
n <- 54
fvalue <- n/2
# n 為奇數
n <- 33
fvalue <- -(n+1)/2
(n %% 2)==1 # 表示「奇數」; 或...
as.logical(n %% 2) # 只有0會變F，其他數值都是T
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
myFun <- function(n){
if(as.logical(n %% 2)){
fvalue <- -(n+1)/2
} else {
fvalue <- n/2
}
return(fvalue)
}
myFun(54)
myFun(33)
jsonlite::fromJSON("https://www.dropbox.com/s/d14j5hp3i5ps657/examSubmissionTimes.json?dl=1") -> examSubmissionTime
head(examSubmissionTime$section)
head(examSubmissionTime$time)
jsonlite::fromJSON("https://www.dropbox.com/s/d14j5hp3i5ps657/examSubmissionTimes.json?dl=1") -> examSubmissionTime
head(examSubmissionTime$section)
head(examSubmissionTime$time)
i<-1
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]
deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei") #
howEarly <- deadline - lubridate::ymd_hms(
student_i_time, tz="Asia/Taipei")
print(howEarly)
i<-1
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]
deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei") #
howEarly <- deadline - lubridate::ymd_hms(
student_i_time, tz="Asia/Taipei")
print(howEarly)
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]
student_i_section=="56"
i<-1
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]
if(student_i_section=="56"){
deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei")
} else {
deadline <- lubridate::ymd_hms("2020-05-27 17:00:00", tz="Asia/Taipei")
}
howEarly <- deadline - lubridate::ymd_hms(student_i_time, tz="Asia/Taipei")
print(howEarly)
studentSequence <- 1:length(examSubmissionTime$section)
map(studentSequence,
~compute_howEarly(
examSubmissionTime$section[[.x]],
examSubmissionTime$time[[.x]])
) -> list_howEarly
studentSequence <- 1:length(examSubmissionTime$section)
library(purrr)
map(studentSequence,
~compute_howEarly(
examSubmissionTime$section[[.x]],
examSubmissionTime$time[[.x]])
) -> list_howEarly
studentSequence <- 1:length(examSubmissionTime$section)
library(purrr)
map(studentSequence,
~compute_howEarly(
examSubmissionTime$section[[.x]],
examSubmissionTime$time[[.x]])
) -> list_howEarly
studentSequence <- 1:length(examSubmissionTime$section)
library(purrr)
map(studentSequence,
~compute_howEarly(
examSubmissionTime$section[[.x]],
examSubmissionTime$time[[.x]])
) -> list_howEarly
compute_howEarly(examSubmissionTime$section[[1]],examSubmissionTime$time[[1]])
compute_howEarly <- function(student_i_section, student_i_time){
# student_i_section <- examSubmissionTime$section[[i]]
# student_i_time <- examSubmissionTime$time[[i]]
if(student_i_section=="56"){
deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei")
} else {
deadline <- lubridate::ymd_hms("2020-05-27 17:00:00", tz="Asia/Taipei")
}
howEarly <- deadline - lubridate::ymd_hms(student_i_time, tz="Asia/Taipei")
# print(howEarly)
return(howEarly)
}
compute_howEarly(examSubmissionTime$section[[1]],examSubmissionTime$time[[1]])
compute_howEarly(examSubmissionTime$section[[2]],examSubmissionTime$time[[2]])
compute_howEarly(examSubmissionTime$section[[3]],examSubmissionTime$time[[3]])
studentSequence <- 1:length(examSubmissionTime$section)
library(purrr)
map(studentSequence,
~compute_howEarly(
examSubmissionTime$section[[.x]],
examSubmissionTime$time[[.x]])
) -> list_howEarly
studentSequence <- 1:length(examSubmissionTime$section)
library(purrr)
map(studentSequence,
~compute_howEarly(
examSubmissionTime$section[[.x]],
examSubmissionTime$time[[.x]])
) -> list_howEarly
library(magrittr)
list_howEarly %>%
unlist() -> examSubmissionTime$howEarly
pick_56 <- examSubmissionTime$section=="56"
mean(examSubmissionTime$howEarly[pick_56])
median(examSubmissionTime$howEarly[pick_56])
pick_78 <- examSubmissionTime$section=="78"
mean(examSubmissionTime$howEarly[pick_78])
median(examSubmissionTime$howEarly[pick_78])
if(condition A){
if(grade >=90){
print("優")
} else if(grade>=80 & grade<=89){
print("良")
} else if(grade>=70 & grade<=79){
print("尚可")
} else {
print("待加強")
}
readline("請輸入你的成績（整數）： ") -> grade # 單獨執行
readline("請輸入你的成績（整數）： ") -> grade # 單獨執行
if(grade >=90){
print("優")
} else if(grade>=80 & grade<=89){
print("良")
} else if(grade>=70 & grade<=79){
print("尚可")
} else {
print("待加強")
}
grade <- 80
if(grade >=90){
print("優")
} else if(grade>=75 & grade<=89){
print("良")
} else if(grade>=70 & grade<=85){
print("尚可")
} else {
print("待加強")
}
grade <- 80
if(grade >=90){
print("優")
} else if(grade>=70 & grade<=85){
print("尚可")
} else if(grade>=75 & grade<=89){
print("良")
} else {
print("待加強")
}
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(purrr)
library(magrittr)
library(stringr)
library(lubridate)
library(purrr)
library(magrittr)
library(stringr)
library(DBI)
n<- 540
conditionExpression_outcome=
ifelse(n %% 2==0, "even", "odd")
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"=fvalue <- -(n+1)/2, # 奇數；只有一行指令可省略{}
warning("n要整數喔")
)
print(fvalue)
grades <- c(52, 77, 59, 88, 90)
ifelse(grades >= 60, "及格", "不及格")
miniFun <- function() {
lubridate::now()
}
miniFun()
miniFun2 <- function() lubridate::now()
miniFun2()
result <- {
x <- 2
y <- 3
x^y + 15
}
print(result)
result2 <- {
x <- 2
y <- 3
if (x < 3) {
warning("x值太小")
} else {
x^y + 15
}
}
print(result2)
result2 <- {
x <- 2
y <- 3
if (x < 3) {
warning("x值太小")
} else {
x^y + 15
}
}
print(result2)
myFun <- function(x, y) {
return(x^y + 15)
}
# 等同於
myFun2 <- function(x, y) {
x^y + 15
}
outcome <- myFun(5, 3)
outcome2 <- myFun2(5, 3)
print(outcome)
print(outcome2)
a <- c(1, 2, 3)
typeof(a)
cut(a, c(1, 2, 3))
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz = "Asia/Taipei")
library(lubridate)
library(glue)
# 建立可當cutpoints的一天時間點
cutpoints <- c(glue("{today()} 06:00:00"), glue("{today()} 09:00:00"), glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"), glue("{today()} 23:30:00"), glue("{today()+days(1)} 01:00:00"))
cutpoints <- cutpoints %>% ymd_hms(tz = "Asia/Taipei")
## 將nowtime轉成它對應的時段是'morning', 'evening', 或其他。
nowtime <- cut(nowtime, cutpoints)
levels(nowtime)[c(1, 3, 5)] <- c("morning", "evening", "jazz time")
## 使用switch決定要做什麼事
switch(as.character(nowtime), morning = {
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
}, evening = {
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
}, `jazz time` = {
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
}, {
print("機器人要休息，饒了我吧～～")
})
whatNeedToDo_butler_mom <- function(nowtime = now()) {
library(lubridate)
library(glue)
cutpoints <- c(glue("{today()} 06:00:00"), glue("{today()} 09:00:00"), glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"), glue("{today()} 23:30:00"), glue("{today()+days(1)} 01:00:00"))
cutpoints <- cutpoints %>% ymd_hms(tz = "Asia/Taipei")
nowtime <- cut(nowtime, cutpoints)
levels(nowtime)[c(1, 3, 5)] <- c("morning", "evening", "jazz time")
switch(as.character(nowtime), morning = {
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
}, evening = {
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
}, `jazz time` = {
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
}, {
print("機器人要休息，饒了我吧～～")
})
}
ymd_hms(glue::glue("{today()} 08:00:00"), tz = "Asia/Taipei") %>% whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()} 14:00:00"), tz = "Asia/Taipei") %>% whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()} 18:00:00"), tz = "Asia/Taipei") %>% whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()+days(1)} 00:20:00"), tz = "Asia/Taipei") %>% whatNeedToDo_butler_mom()
myAnswer <- c(2, 3, 6)
correctAnswer <- c(2, 3, 5)
if (myAnswer == correctAnswer) {
# 只取用第一個T/F
print("你答對了")
}
if (myAnswer == correctAnswer) {
# 只取用第一個T/F
print("你答對了")
}
Sys.setenv(`_R_CHECK_LENGTH_1_CONDITION_` = "true")
myAnswer <- c(2, 3, 6)
correctAnswer <- c(2, 3, 5)
if (myAnswer == correctAnswer) {
# 只取用第一個T/F
print("你答對了")
}
myAnswer <- c(1, 2, 3)
correctAnswer <- factor(c(1, 2, 3))
myAnswer <- c(1, 2, 3)
correctAnswer <- factor(c(1, 2, 3))
if (is.factor(myAnswer) && all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
if (is.factor(myAnswer) & all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
myAnswer <- c(1, 2, 3)
correctAnswer <- factor(c(1, 2, 3))
if (is.factor(myAnswer) && all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
if (is.factor(myAnswer) & all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
myAnswer <- c(1, 2, 3)
correctAnswer <- factor(c(1, 2, 3))
if (is.factor(myAnswer) && all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
if (is.factor(myAnswer) & all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
myAnswer <- c(1, 2, 3)
correctAnswer <- factor(c(1, 2, 3))
if (is.factor(myAnswer) && all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
if (is.factor(myAnswer) & all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
myAnswer <- c(1, 2, 3)
correctAnswer <- factor(c(1, 2, 3))
if (is.factor(myAnswer) && all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
if (is.factor(myAnswer) & all(myAnswer == correctAnswer)) {
print("答對了")
10
} else myGrade <- {
print("答錯了")
0
}
myGrade
myAge <- 40
myChildrenNumber <- 5
if (myAge >= 65 | myChildrenNumber > 3) {
"符合申請資格"
} else {
warning("不符合申請資格")
}
if (myAge >= 65 || myChildrenNumber > 3) {
"符合申請資格"
} else {
warning("不符合申請資格")
}
myAge <- 67
myChildrenNumber <- 5
x <- c(2, 5, 10, -21, 3, 8)
ifelse(x%%2 == 0, "even", "odd")
y <- sample(40:100, 20, replace = T)
dplyr::case_when(y < 60 ~ "F", 60 <= y & y < 70 ~ "D", 71 <= y & y < 80 ~ "C", 80 <=
y & y < 90 ~ "B", 90 <= y ~ "A")
